name: Build Android Staging App
on:
  push:
    branches:
      - quality-gates-integeration
      - candidate
      - release
jobs:
  build:
    name: Build Android Staging App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Determine Versioning Components
        id: version
        run: |
          # Fetch latest tag using semantic versioning format (v1.2 instead of v1.2.0)
          LATEST_TAG=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+$' | head -n 1 || echo "v0.0")

          # Count commits since the latest tag (Patch number in SemVer)
          if [ "$LATEST_TAG" = "v0.0" ]; then
            PATCH_VERSION=$(git rev-list --count HEAD)
          else
            PATCH_VERSION=$(git rev-list ${LATEST_TAG}..HEAD --count || echo 0)
          fi

          # Get the current branch name
          BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')

          # Remove special characters from the branch name (replace with "-")
          BRANCH_NAME_CLEANSED=$(echo $BRANCH_NAME | sed 's/[^a-zA-Z0-9]/-/g')

          # Get the latest commit hash (short version)
          COMMIT_HASH=$(git rev-parse --short HEAD)

          # Construct the version in the required format
          VERSION="${LATEST_TAG}.${PATCH_VERSION}.${BRANCH_NAME_CLEANSED}.${COMMIT_HASH}"

          # Export the environment variables for later steps
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV
          echo "PATCH_VERSION=${PATCH_VERSION}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${BRANCH_NAME_CLEANSED}" >> $GITHUB_ENV
          echo "COMMIT_HASH=${COMMIT_HASH}" >> $GITHUB_ENV

      - name: Display Generated Version
        run: echo "Generated Version: $VERSION"
